<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0208.0338                               -->
<workbook original-version='18.1' source-build='2024.3.4 (20243.25.0208.0338)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='zillow' inline='true' name='federated.0cgd2nk1oc618y18k37bp0y4b1xd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='zillow' name='textscan.0k8fd7n0y48dcq19xw0ko1hcq0cf'>
            <connection class='textscan' directory='//wsl.localhost/Ubuntu/home/ibrahim/repos/main/data-230-project/data/out' filename='zillow.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0k8fd7n0y48dcq19xw0ko1hcq0cf' name='zillow.csv' table='[zillow#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='RegionName' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='ZHVI' ordinal='2' />
            <column datatype='real' name='Income Needed' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[zillow.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RegionName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RegionName]</local-name>
            <parent-name>[zillow.csv]</parent-name>
            <remote-alias>RegionName</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[zillow.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZHVI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ZHVI]</local-name>
            <parent-name>[zillow.csv]</parent-name>
            <remote-alias>ZHVI</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Needed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Income Needed]</local-name>
            <parent-name>[zillow.csv]</parent-name>
            <remote-alias>Income Needed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='State' datatype='string' name='[Calculation_2019864501322563584]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;State Average&quot;' />
      </column>
      <column caption='IncomeVsZHVI' datatype='real' name='[Calculation_2019864501324357633]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Income Needed]/[ZHVI]' />
      </column>
      <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
      <column caption='Zhvi' datatype='real' name='[ZHVI]' role='measure' type='quantitative' />
      <column caption='zillow.csv' datatype='table' name='[__tableau_internal_object_id__].[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
      <group caption='Top 5 Avg ZHVI' name='[Region Name Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([ZHVI])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[RegionName]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Ibrahim/AppData/Local/Temp/TableauTemp/#TableauTemp_0dm2wqm1fvct5d1h76cft1wyn0tk.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/16/2025 12:37:37 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>RegionName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[RegionName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RegionName</remote-alias>
              <ordinal>0</ordinal>
              <family>zillow.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>1</ordinal>
              <family>zillow.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
              <object-id>[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZHVI</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ZHVI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZHVI</remote-alias>
              <ordinal>2</ordinal>
              <family>zillow.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4056</approx-count>
              <contains-null>true</contains-null>
              <object-id>[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Income Needed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Income Needed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Income Needed</remote-alias>
              <ordinal>3</ordinal>
              <family>zillow.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4056</approx-count>
              <contains-null>true</contains-null>
              <object-id>[zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RegionName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Modesto, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bakersfield, CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Maria, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hanford, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Visalia, CA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Napa, CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuba City, CA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Luis Obispo, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Rosa, CA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco, CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madera, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sacramento, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Salinas, CA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Cruz, CA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oxnard, CA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Merced, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Centro, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stockton, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego, CA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Redding, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fresno, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vallejo, CA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='zillow.csv' id='zillow.csv_0F782B64CD6647AF9CB9EE26DD93DB5E'>
            <properties context=''>
              <relation connection='textscan.0k8fd7n0y48dcq19xw0ko1hcq0cf' name='zillow.csv' table='[zillow#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='RegionName' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='real' name='ZHVI' ordinal='2' />
                  <column datatype='real' name='Income Needed' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average ZHVI per city'>
      <table>
        <view>
          <datasources>
            <datasource caption='zillow' name='federated.0cgd2nk1oc618y18k37bp0y4b1xd' />
          </datasources>
          <datasource-dependencies datasource='federated.0cgd2nk1oc618y18k37bp0y4b1xd'>
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column caption='Zhvi' datatype='real' name='[ZHVI]' role='measure' type='quantitative' />
            <column-instance column='[ZHVI]' derivation='Avg' name='[avg:ZHVI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]</rows>
        <cols>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk]</cols>
      </table>
      <simple-id uuid='{93384D42-E90B-4102-867C-340E25A51215}' />
    </worksheet>
    <worksheet name='Average ZHVI per city per year'>
      <table>
        <view>
          <datasources>
            <datasource caption='zillow' name='federated.0cgd2nk1oc618y18k37bp0y4b1xd' />
          </datasources>
          <datasource-dependencies datasource='federated.0cgd2nk1oc618y18k37bp0y4b1xd'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column caption='Zhvi' datatype='real' name='[ZHVI]' role='measure' type='quantitative' />
            <column-instance column='[ZHVI]' derivation='Avg' name='[avg:ZHVI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:RegionName:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:RegionName:nk]' member='&quot;Hanford, CA&quot;' />
                <groupfilter function='member' level='[none:RegionName:nk]' member='&quot;Santa Rosa, CA&quot;' />
                <groupfilter function='member' level='[none:RegionName:nk]' member='&quot;Yuba City, CA&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk]</rows>
        <cols>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[yr:Date:ok]</cols>
      </table>
      <simple-id uuid='{477D5E0A-8BF2-497A-9B41-207D803FD1D8}' />
    </worksheet>
    <worksheet name='Average ZHVI top 5 cities vs Income Needed'>
      <table>
        <view>
          <datasources>
            <datasource caption='zillow' name='federated.0cgd2nk1oc618y18k37bp0y4b1xd' />
          </datasources>
          <datasource-dependencies datasource='federated.0cgd2nk1oc618y18k37bp0y4b1xd'>
            <column caption='IncomeVsZHVI' datatype='real' name='[Calculation_2019864501324357633]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Income Needed]/[ZHVI]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Income Needed]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column caption='Zhvi' datatype='real' name='[ZHVI]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2019864501324357633]' derivation='Sum' name='[sum:Calculation_2019864501324357633:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[Region Name Set]' />
          <slices>
            <column>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[Region Name Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[sum:Calculation_2019864501324357633:qk]</rows>
        <cols>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{DBD31A1B-590B-4B7E-A4D3-39E98EA5D21F}' />
    </worksheet>
    <worksheet name='Average ZHVI top 5 cities with California Average'>
      <table>
        <view>
          <datasources>
            <datasource caption='zillow' name='federated.0cgd2nk1oc618y18k37bp0y4b1xd' />
          </datasources>
          <datasource-dependencies datasource='federated.0cgd2nk1oc618y18k37bp0y4b1xd'>
            <column caption='State' datatype='string' name='[Calculation_2019864501322563584]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;State Average&quot;' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='Region Name' datatype='string' name='[RegionName]' role='dimension' type='nominal' />
            <column caption='Zhvi' datatype='real' name='[ZHVI]' role='measure' type='quantitative' />
            <column-instance column='[ZHVI]' derivation='Avg' name='[avg:ZHVI:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2019864501322563584]' derivation='None' name='[none:Calculation_2019864501322563584:nk]' pivot='key' type='nominal' />
            <column-instance column='[RegionName]' derivation='None' name='[none:RegionName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[Region Name Set]' />
          <slices>
            <column>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[Region Name Set]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:Calculation_2019864501322563584:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dotted' />
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk] + [federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk])</rows>
        <cols>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{AFCC7D5B-43A8-4D5A-85D3-3D5F67BB433A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Average ZHVI per city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[avg:ZHVI:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6617A8B4-143B-4906-A4B0-D6B959E09236}' />
    </window>
    <window class='worksheet' name='Average ZHVI per city per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='272'>
            <card pane-specification-id='0' param='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]</field>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E00FC802-7CE3-4585-A4C9-34F5CE8C58AA}' />
    </window>
    <window class='worksheet' name='Average ZHVI top 5 cities with California Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:Calculation_2019864501322563584:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[Region Name Set]</field>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:Calculation_2019864501322563584:nk]</field>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[none:RegionName:nk]</field>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7108EA92-7CEB-4F71-81C8-72FF4A9B3409}' />
    </window>
    <window class='worksheet' maximized='true' name='Average ZHVI top 5 cities vs Income Needed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[:Measure Names]</field>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[Region Name Set]</field>
            <field>[federated.0cgd2nk1oc618y18k37bp0y4b1xd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8173D5EC-2545-4594-A7E8-DDEB0BBB460D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average ZHVI per city' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average ZHVI per city per year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average ZHVI top 5 cities vs Income Needed' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average ZHVI top 5 cities with California Average' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfiklEQVR4nO3dWYwcd2Lf8W9XdXV39X339NwHb4qXDsrS6vBqDSvyOs5mN06CtZ3AceCn
      BHlK4qcAAYI8JQHyYicIECc2YC+wOby7tjfrtbWWtdKSOkiKN+e+eo7u6fuu65+HIbkrkJJm
      yOEc7P8HGIkAB901w/+vqv5Vv/q3SwghkKQe5QaQGZB6lfveHxqNxo68YKvVwu/378hrSdKT
      5gZwuVyEQqEde9GdfC1JepLcX/wtIITD/Pwi6WSEhfklEn391BotorpKV2hEgjqmaRKPx5/0
      9krSjtpSAFwuBZ/uJRCMEorWMbsddLeLtuXgEl3uXL3J2JmXcRwH27axLOtJb7ck7YgtHgEs
      1nMraF4dry+A4nRYK7eJ6gpdoTF29CSdWhklmEFVVdzuLb2sJO05105fBq3X63IOIB0Yyl5v
      gCTtJRkAqafJAEg9TQZA6mkyAFJPkwGQepoMgNTTZACkniYDIPU0GQCpp8kASD1tW3Xo4YE0
      U7MrZPtirJeaxPwKHUcjGvRjWrIOLR0826pDr+VWEVjkyy38mou2JXAJgzvXbsk6tHQgbbkO
      nV9ZIZnOQLuNW4FKs3P/gZixoyfp1mUdWjp4ZB1a6mlyEiz1NBkAqafJAEg9TQZA6mkyAFJP
      kwGQepoMgNTTZACkniYDIPU0GQCpp8kASD1ty3XoublFRrIxbs7nGczEKFSan14d2rJIyDq0
      dMBsuQ6t+710mi0cYVOud/BrCh17sw49KevQ0gG1jTr0Kk4mg1dYuFUX1WaHqE+hg8bYsWdk
      HVo6kGQdWuppchIs9TQZAKmnyQBIPU0GQOppMgBST5MBkHqaDIDU02QApJ4mAyD1NBkAqafJ
      AEg9bct16Dt3pjh69AiXLl9mOJtmtfzTOnQ04MV0FPqz6Se9vZK0o7Zch45Ew+SXZ8gXKwTD
      MWJBP8IFPiFYnJlk5Jnzsg4tHThbaoMKYXH7xm3SgyO4FYGGzVq5SeTuESAc0DEtk1g0Ktug
      0oEi69BST5OTYKmnyQBIPU0GQOppMgBST5MBkHqaDIDU02QApJ4mAyD1NBkAqafJAEg9TQZA
      6mlbrkPfvjPF2FCWqakZQokUtXqTqK7QuV+HVhmQdWjpgNlyHToaDePRddxA23CIBXWEy4VP
      CJZmpxg5KevQ0sGz5dWhq8UStuWg+oNkEiGKtRZRn0JXeDh2+jlMs4Oi+OTq0NKBIuvQUk+T
      k2Cpp8kASD1NBkDqaTIAUk+TAZB6mgyA1NNkAKSeJgMg9TQZAKmnyQBIPU0GQOppW69D355k
      fGSAmelpfJEk9UaTmK7erUN7MIVb1qGlA2frdehYBFVVCcYz4NjEQ36cu6tDL83NMHzieVmH
      lg6cbdWhjU6XjmGQTqWo1NtEfApdNI6dfhbTMlAUXdahpQNF1qGlniYnwVJPkwGQepoMgNTT
      ZACkniYDIPU0GQCpp8kASD1NBkDqaTIAUk+TAZB6mgyA1NO2VYc+NDbE/OoGEa/CarlJVFfp
      Co2IX8NCk3Vo6cDZVh1a8wUI6jW6pkU86MdRwOcIludnZR1aOpC2XIeuFUsIR1CuVMj29VFr
      dojcPQIcO/0clqxDSweQrENLPU1OgqWeJgMg9TQZAKmnyQBIPU0GQOppMgBST5MBkHqaDIDU
      02QApJ4mAyD1tC12gQSGYeDxaLRaHXSfh45hoakuHBTcqoIQQnaApANniyNWMDs7RyoapFyp
      YLgDCLOL36NgChXF6uCP99GfjiOEwHGcJ7vVkrRDtnwK5FYV2l0Tj+bGFuBWVVAUVAUsywRc
      CCHY4W6dJD1RWz4CRCMR9FAYyzAYCurU2wY+TcESKl5NxXEcFEW5/yVJB4GsQ0s9Te6qpZ4m
      AyD1NBkAqafJAEg9Td65knqOEALhbH7JAEg9wbFsmus1KnMbdMpNhABhOzIA0tPNNixKU+uU
      ZwpoukZkNEn69CCKW5VHAOnpZRsW5Zk8pal19GSI4VeP4I3quFyuT32fDID0VLG7FqWZPOXp
      dfR4kKFXj+CL+h8Y+PfIAEhPjVahTu7CDHoieHeP/9kD/55tBUA4NvVmh6DfS6tr4lVd2Cho
      blXWoaU9I4SgPFOgcCNH9tkRQoOxLxz49zwwYoXo8vF7H9GwFb70+ktoP/N367kl1vJ53KEk
      LttE9yhYjgJmm0Cin/50TNahpV1lNrrkr+XoVFsMv3YEb0TfViv5gQC4XF4GhzN8/68+4KXX
      X/rU3yVSKVZXV3G5XCguF+DC5QLbsQEh69DSjnAsm1ahjtU2cSwHx7LRAl40vwfV48axbOyu
      RW25THOtSmwiTfb5ERRN3fZ7PfScpVIqMTw6+sBtYtWtMXbsFOGAl0bbxOd2YaHicW8+ESbr
      0NKjEkLQLjaozG3QWKng9nvwBH0obgVhO3QrbcyWgW1YqJqKoqnoiSATb57CrWtf/Aaf4YEA
      tKpFbkwvMjA49sA3K24P0bAHgHBw8009j/zWkgSO5VDPlSlNrmEZFtHRJCNvHMcT9G75PP5x
      PBCAWr5AcmScwXAEA3j0bEnSZ7NNm+r8BsXJNdw+jcSxLMH+KIq6u2cPDwRAUX2cPJbmo798
      n1ePTuzqxkhPPyEEtaUS+U+W8IR1+l8Yw58K7cre/mE+84mwdq2GOxze9hFAPhEmfRbhOOSv
      56gtljYHfnrvBv49Dz3erCxMc+HiB6zmy7u9PdJTymwbLL8/Q6fUZPSN4wQy4T0f/PAZV4GM
      roEpVLqtGhDb5U2SnjadSovFdydJHe8nOpHaFwP/nocGwOfz4dgOI6Mju7090lOmU707+E/0
      Ex3fX4MfPiMAjmPj03X216ZKB4kQgla+Tu7iDKmTA/ty8MNDAlDOzfAX735AMJBg+/fVJGlz
      srtxa5XyTJ6+Z0cJDUT35eCHhwQg2j/Or/ytAJNTi9jIh4al7bENi+WfzCAsh9E3TuAJevd6
      kz6XXBhL2jFWx2Tpx1N4wzp9z43s+k2tR7Gt/rLVbTG/vE5/JkGh0rz/SfEhvw/btuTA72FG
      o8vSjycJ9EXInB7CpezPU56fZZvW9gJQq5RpVIvMoxJ0C6pNF4g2uembDB8/R8BxsG0by7Ke
      1DZL+1Bzrcb6pUUiYwkSx7Kb7eB92Ii3DIv6WpnyYoHy0gaVleI2H4gBVMWFikOp3iGqK3SF
      Rv/QMO1GHSXiR1VV+WBMj7BNm8L1ZerLFfrPj+2bm1s/y+qarE/mWL46RyVXxBfUSYxmGDw7
      zsm3npdzAGn7bMOiPFugPLWOLx4g++zoY1WSd5oQgtpamcWPp1m9tUQgEWLo7ASpiT584U8/
      JikDIG2JbVi0CnVquTKNlQr+VIjksSy+eGDf7PUdy2bt9jJzF+/QqjQYPD3G0LlxAonPPjLJ
      cxXpoYQQWG2TZr5GbalEu9jEE/ISGoiRPJ7FE/Ttm4FvmzarNxeZevc6qtvNxMvHyRwbxO35
      4uEtA9DD7i8RaDvYhkW31qFbbdMpN+mUW9imjR73ExqMk31+FLdP2zeD3rFs6vkquWvzrNxY
      wBfSOfGLz5KayG7r8qs8BeoxtmHRWKtRWyrSLjbh3j+/y4Un6MUb0fFF/ejxANrdRxL3YtAL
      x6Hb7NDYqFHPV+k2OnSbHbr1Nq1KA6PZQdHcZI8PMXh6jHBfFNcjPIorA9ADhBB0ax3KU+vU
      lkt4wzrh4TjBTGRzgKvK5v/3+Fluo92lNJ9nfTLHxuwatmnji/gJpSP4Qn68QR++oI4eDeAL
      6XgCPlT34xV2ZACecka9w9qVRTrlJpGRJLGJFFpgd5633QrHsikuFli6NENhZpVgMkzmyACp
      w/0E4iFUTX2i2yoD8JQSjqAyWyB/I0dsIkXiSB/qFiaFu8XsGCx/MsfcxTsoisLg2XEGTo08
      cJnySds/vxFpx9iGRe7iLFbbZPi1z18bc7c5tsPCh5NMvXuDSDbO6V8+T3wkvWe9IRmAp4zZ
      MjYLaRGdwZcmUB7zHHknNUt1rn73IpZhcf7Xfp5INr6rwXQcAS74ox9eYzlf4R+eDsoAPE06
      1RZLP54iMpwgdXJg3xTShBCs3V7m2vcuMvLCEQ69evKxJ6/beW+Ab719g/evLvCv3hxEXbvD
      SzEffk9YzgGeBkIImmtVVj6Y23z6ah89dyuEYOHDKSbfucZzv/oK8ZH0E9824TjYpsF7N3L8
      n3cn+Y2zfgrrBRIRneHBPkKZAfRYCkVVtxeAZr3M0tIq6f5+ao02UV2h42iEAz4syyIcDssA
      7DLhOJSnC2zcWqH/xfF9VUhzLJvbb19l9eYi57/5OqF09Im9lxCCdrnA1au3+ZOrZX6uTxAN
      eNFjCY4MJQnEkmj+4AOXerd9BMgtLWEJgUuAcIFLCDZWlxg+8RzxoJdarUYwGNzRH076NMd2
      MKptGitV6rkyLlUhe34Ub1jf6027r1msc/1PP0QIwdlvvIwv9GS2TdgW7coGN29MsbhW5tjx
      w1RcIZ47nMHr/eKC3vbq0MJCcXvxiQ5r5dbmEUBo9A+P0q7XUMIZWYfepvt1BMvZXFZebO7V
      AVwuF4LNqzrG3ZpCq9igW2ujelRC/TEGX5rYvMqzTxYkdhzn/inPxMvHGf+5Y488ERdCYBtd
      zHbzp1+tBqrHh0tRMJo1CqvreP0637pm8bXXnuX0udFtvYecA+wyq2tSmd2gW21hNLqYzS4C
      NlfguP+fe/8km39W3CqekA9vREePB9HjAdz6/unl3NOpt7n6vYt0ai3OfO0lwpntPwzfbnfo
      lta4NbnIwnqFEzGH9brJRsvhxWdGqLZMcsUmp0aT/PmVVS6t2fynf/4WulfD/QiXUuWuepc4
      tkNlboONmzn8yRCBdJjo2OZd2c0agmvzqo3L9akcCNj8u3022H+WYzus3lrk1g8u03diiGf/
      3itbamICNNoGtxYKZL0mP/pkkbdvbvBPX4xTdUfZ8PhIP3eM4mKR9Zl1fMMnuTG5yvV6nnMD
      R3grfYhfC+uE/I/+4L08AuwCo9kl9/40KC76zg7vqw7947C6Jut3cky9ex1FUTj2C2dIHer/
      wp+tXG/z9qU5xqIqd6YWuLxQ4evnkgwOD+JP9RML797vRwbgCWsXGyy/P010PEXyeHbfnKtv
      lxACq2vRKtUpLRUoTK9SXt7AHwty+LWTpA8PfOHd3PVSg0KpRnFpjgs3l/nK8QQTEyMEMwO4
      vQ9+hOlukAF4QoQQ1HMVVj+ap+/cEOHhxIHY6zu2g9nuYnZMOvUW9XyV6mqJ6mqJTq2NpnuI
      9sdJTWRJjt19xHALN9xKlTr/+vd+wEt9greeHyE+ehRPcO8v2coAPCH1XJnVj+YZeGmCQDq8
      15vzgM09ukm32aFValBbK1NaLFBZKQKgqCregJdgKkIkGyeSjRNMhfHo3m3dYZ5ZKfM/v3+F
      rw81iKZS9B85uXk9fp/sDGQAnoDGaoXcB3MMvnyIQGr//C4cy6a0WKAws0phZpV2pYnqcaOH
      /YQyUeLDaWKDSbxBH6rmfuQqhRCC+bUKLtviww8/gW6TN7/8PKH0F88PdpsMwA66V0nIXZxj
      4KVxgpnIXm8SsHl5cvnKLAsfT6O6VdJH+klNZAn3xdB8nh1rYgoBlm0zOb/Gf/zWe/zKhIsX
      nxkhdeQUbu/+uUn3s2QAdogQgvJ0no2bm5WEYN/eD37btJi9cIfZ92+RHO9j7MUjRAeTT+RT
      PC3L4ve//wmzc0v85gnQM0NkJo6i6fv7ipcMwA5wbIf1K4s083WGvnRozysJQghKC3mu/dmH
      eIM6z7z1PMHUzk84hWNzfTbPDz+e441YkdmmlxdOjZEdHkbVPPt64N8jb4Q9JrPVJXdhFsWt
      MPrGMdxb6J88SY7tMP3uDeY/nOTEm88y8MzIY196dWyLdrvDWrFOwKxxdanKX98p82Z/m6Wm
      m2P9gxw5e4Iz4TAu18G5zGs5tjwCPCohBI3VKqsfzRMdS5I62b/n1/g7tRZX/uQnWIbFuW98
      iUBs66XEe72bfKHM5GqNfneThY0G7840eCVtsNx0cWnDza+fT+ELRbA9AU4Mx/H5vLiU/fPQ
      zecRQlBpt5krbbBQLrJSrWwvAGarxtRinnQySL7UJKardIRGNKhjWA6ZdPKpD4Bt2tSXS5Sm
      89hdi75nRwhmI3t6uBeOIHd9nls/uMTA6TGOvnEGVfvsQenYNvlilY9nNhj2G6xt1PnOJ0W+
      MmiheP3cbvh582QMfyBAyXDzzGgc3evBpago++Qhm60SQlDrdpgvbXBjbYVyq8VwLM5oPMlQ
      NLa9AOTmZ6l32gh3kJBXwXGBS8D64gxjZ14m5nc/nXVoAe1Sg9pCicZqFV9EJzyWJNgXxrWH
      a+B3ai0quSLLl2fp1Nqc+KXniA+nHvq9ZqvBzPwK//ujVQ776sT9bqa6Eb40HiQeCdBxBxnu
      i+Hx7J81PrfLdhw2Wg3KrRb1bodKp02uWqFrW2RDEY6lMozGk3jUn+4ctncEaDeYmV8iEotT
      a7SJ6ApdNKIBHcO0SKWeniOAEAKj0aW2WKS6sHlzKDKcIDKSQAvu/LIi929MNTq0ynWMlnG3
      Ku1gdU2MVpdus4vR7GC0urQrTRzbIZiOkDncz8gLRx4ooAkhWF9d43f/7BoJV4tfONVHyZvh
      zESaUEDf81O2x3XvlGapUmKutMFytYymqCQCQcI+HxGfn6FojGQgiFt5+AJfcg7wM+6th1nP
      lanOb2C2DYLZKNHRJHoisOMDxmh3KS0UKM6vszG3TrvaxO3R0KN+vH7f/Yao26PhCXjx+L14
      Aj68fh/ekI4/FnzoujlCwNWZNd776BavpVqUY0d57sQwfp9nR7d/L3Qtk+VKhZlinvlSEctx
      yIYjjMWTjMQSRHQfyjYm4j0fACEEVseksVKhuliiW20RSIeJjCQIZMI7vqqCZVjkrs6xenOR
      6kqJYDJMcryPxFiGcCaG26c91nX6cq1Na3mSP/ybOc6fO8rrzx1GPWAPKJm2zUqtQr5Rp9Rs
      Um636FgmHdPEsG3ifj/jiRTjiSRJfxC3+uj/Rj0bAMeyaaxVqcxu0C418KdChIfiBPsiT2QB
      KSEEhelVbvy/j/GFdIbOTZCayOLZoVXahBBcvDbHf/3eFX771T6ef+EMmh7YgS3fHbbjsFgp
      cWt9lbnSBgHNS184QiIQIKb78WsevG4NXdv82qlT0J4LgHAcKvNFCtdzaH4P0bEkocHYE71+
      b3ZNrn73IpXlDU68+Sx9x3buM7Rsx+HtS3OszM1yOmYSP3KW4aHsgbgJ5QiHUqvF7fwaN9ZW
      8KpujmeyHEmlieq7s5hXzwRACEGrUGf9yhIuxUXmzBB68sm3Eju1Fh9+6x38sRCn//Z5tC2c
      h3cMC0cIdI+bcr2DEA5hn8rtXJVu1+RQQuOP3lug0Wjyy8Mm377W4GuvHuPUySMo+/h0xxGC
      arvFUrXMQqnEcrWECxdjiSSns4NkQmGUXRj0HavNdO0W10uXeiMAVttg/eoyzXyN9KlBIsOJ
      XVk0qrZe5sM/fof+Z0Y5+sbp++f2tmlgthoUilXWizXSWptvX2/TbHX4B8dV/vNPGvjd8E/O
      ePjdj9oENBf/+JTG/5p2kQi4eeuQh9sNH6N9MUb6E/jCMVTP/v083nq3wycry9xYW8FxHPrC
      EUZiCYZjcWK6H3UXrkY5wmG1tcT10mXm61Nk/P2ciJ19ugMghKA6XyR/dYnQYIz0M4Oo3t3Z
      Q9bWy1z8wx9x5PVTDD9/CKvbpplfYXFhmY9mirw04uP3rwtS8Qi/+Uo/802NeFCjL+TGsEFV
      VTyaG1Q3iqqiKneXL3ftzXr922U7Drlqhaury8yVNphIpDg7MEQ6EHqsSet2WY7J7co1Lm1c
      QOBwPHqG49HTBLXNbtRTGwDbsFi9tECn3KT/hTH0xO49hFEvVLnwB3/F0Z8/Tf+pIUpzt5mf
      nCKRTvF/J20SiRi//ouncblcqPv8gfftEEJQbre4sbbCzfVVNEXlRF+WZ/oGCHh2txxnC5ub
      5St8VHiPoBbmhdQrDAXHUF2fDt9TGYB2sUHuwiz+VJDMuWFUbffOi+uFKhf/8G0mXj5ONKtS
      nL3JdFXlj693+J3feJ2jw8ldOc/dLbbjUGw1WSqXuF1Yo9JucTiZ4VR2gEww9ESq11+kZlT4
      i+XvYAmLL2W+wkBg+DPvDTxVARDi7pr413Jkzg4RGdm953CFEOSnVvjkOxcYOtOPP9QgX22T
      U/t47cVTdE2LbGLvj4xbIYTAsG3apoHtODhCYDsOLdOkZXSpd7tUOi0qrRbFVhOPqjIQiTKR
      TDMeT+J5yERcCEHTarDSXGShMU3FKBPUwvjdAfr9Q4yGDqEpj3ujTjBVvcWPVr7P6fhzvJB6
      BVX5/J3fUxMAx7JZu7xIq1Bn8OVD+KL+3Xtv22H6xzeYu3CLoVNhPL4u8YkT/IcfLPD8sQG+
      /trxXduW7RBC0LFMCo0G640axWaDYrNJtdPGdhzcqorq2jxFU1wu/JqHgMdDwOsjqutEdT8J
      f4CQ1/fARPbegC928iw2ZllozNC0GqR8GYaD44S1KIbTpW7WWGzMUjMqHI6c4ETsDClf37Z3
      XEIIrhQ/4OON93lr6Ov0+4e39BpPRQCstsHS+9OoXjcD58d39ZNQGsUaV7/7Aa3SBv1HNUJ9
      aS41ImQzCc5MZPA84Y/42S7bcVir15jeWGeuWKTe7RD26fSFwiQCARL+IFG/H92toanq/dO1
      L/oZHOFQNcr3B3u+vYojHMJahKHgGCPBCdJ6Fk15cC4ghKDU3eBm+QpT1Zt4VM/mZDV2Br/7
      i2/mCeFwIf8OtyvX+droN4l5E1v+fWwrAFajyI3FEv3JEIVKk6iu0hFuYvfr0KldD0Cnsrkm
      fngoTvrU4K6tid9tdlj8eJrpH18nmhEkhrxkTpyjqsX4L9/9mH/xjRfJxPe+FSuEoGkYLFVK
      zBY3e/Aet5uJRIqJRJJ0MIzX7f7cAS6EwBYWhmNgOgZdu0PTrFM3a1SMEhuddYqdPC6XQr9/
      mJHQBFn/ICEtjNu1vbu2lmORay5wo3yZpcY8x6KnOJs8T1h7+DKLjrB5Z/UH5JqL/J3RbxLS
      trcCx7YC0CoXmFnJ4/WH8bvZ8zp0e6PByoVZks8MEBndeuoflW1YFOfzrFybpzCdw6tbpEY9
      JA+Ps+jE+PZ7s/ybf/QqPq97zye6XctipljgVn6NfKNOXzjMSDTByN1r746waNlNDHtzQDes
      zcFcM8t0nQ6OEAjh0LHbNK0GtrBRXSqqS8WtaATcQUJamJAWJeFJkfRlCGohVNfOHX2rRplP
      yh8yVb1B1j/Eyeg5hgJj9ye0trD4y5U/pWHV+Orgr+JTt/8o6rYC0G5UWVhaIZ5MUK5trg7d
      FR4iQR3DNEkld68O3VyvsfyTafpfGCM0ENvx1xdCYJsGjUKZ4nyejdkCpaUCbs0hNhggMRwm
      EI/SDWbwBMJcnlqjLxHkzERmz055hBCs1qtcXVlmeiNPOhjmRF8/2YiPhlUm314l31mj2MnT
      shq4FQ23S8Oregm4Q0S9cWLeBLq6WUNQUPC5dfzuIF7Fh3I3AMou34toWy3uVK5xvXyJjt1h
      NHSIkeAE10uXUVwKbw19HY/6aDcCD9wc4KdLj8wy8OI4weyjfejCvU8RsU0Du9vB7LSwum06
      tSa19TqVXI3aehOX6iE2nCI10UdiJIk/GsRxqbQMm41qi3/3B3/Db331HK+cGt7hn3QLP4MQ
      NI0uhUaD2dIGs8UCjhAcS6eJhk1K5jJLjTnadouIJ0ZGz5L2ZUn40kQ8MTyKB8W1v+Yon8cR
      NsVOgfn6NPONaaKeOF/u/yXcX3Cl5/McqAA4tsPGzRUqs4VHWnpEOA7tSpHayjyNfA5w4VIU
      WpUu9UKXRsnBNt1E+pOkDmVJHcoSSkVR3AorG3WKtTajfVH+5e/9kOMjSf7Z3z1Po2MQCfh4
      3DHUMU0qnRbNrkHD6GLY1uZRyBG4XHcnoQLapkHz7qXIYqsBAsI+nZF4DL9uULYWmG9MEtRC
      jIUOMxwcJ+nLPHTyeZDdG7aP+zMdmAAY9Q7LF2ZQPW76XxhF28aS2I5tUVtZpDR3G5fLRahv
      CMvUKcwWWJ9cxeVykZrIkj4yQHwkjebTEMA7VxZYWKvw9798kn/7P97h8GCc3/rqOSqNDuGA
      97E6LEII1us1JjfWWSyXKLVam5cYPV6CHi8e9+Y8QiC4u2A6ALqmEfB48WouvJpDlzobnRWm
      qjdRFTeHIyc4FnmGmDdxoFZo2CsHJgC15RJW2yQ2kd7ylR7HMqnm5ijNT+LRA4T6D1FebrLw
      0TSObZM9OUL2xBBqOMBqucl4f4z/9qeXuDVf4N//9lf43vuTDCRDvHp68/RmJ/agbcPg6lqO
      G6s5TMfhUDLNWDxBXziCQ5eqUWKjk6dh1ujaHbpOF9M2MIWBaRt07DYdu40AfKqPiCdOWu/j
      cPgEKT2D4joYKzTsFwcmANthdTtUl2YoL83gC0cJZsZZmyyy8NEU0YEEY+ePsmQLLk+v843X
      j/Pf//wyxVqb3/nmK+TLTaIhH4nwzi7X3TIMLi0vcGVlmaFojLMDQ8QDHpZbcyw35lluzmM4
      BiEtTNybIuyJ4lN9eBQfHsWDpmhoqgevqqOrOpriQVM823r8T3rQUxMAIQTdWpny4jTN/Ar+
      ZIZAcoSVG+ssXp4hNZFFPdTPj6bW+eWXjzC3UqZr2vzC8+O4VeWJldKEENxcX+WvZ+4wEkvw
      wtAwVTvH7cpVVlpLZPQBRkLjDAZGiXkT275uLj2e/w/kKjEwgLxTegAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
